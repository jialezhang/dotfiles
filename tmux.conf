set -g status-keys emacs
unbind C-b
set -g prefix ^g
unbind '"'
unbind '%'
bind 3 split-window -h
bind 2 split-window -v
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# To copy:
# bind-key -n -t emacs-copy M-w copy-pipe "xclip -i -sel p -f | xclip -i -sel c "
# Set bash to whichever shell you are using, zsh for example
set-option -g default-command "reattach-to-user-namespace -l zsh" 

# Remove the default binding for copy-selection, substitute emacs-copy with vi-copy if you're using vi-mode
unbind -t emacs-copy M-w

# Bind a different key to copy-selection
bind -t emacs-copy c copy-selection

# Bind prefix-M-w to copy-selection, save selection to buffer, and then pipe it's contents to pbcopy
bind M-w send-keys c\;\
         save-buffer /tmp/tmux-buffer\;\
         run-shell "reattach-to-user-namespace -l bash -c 'cat /tmp/tmux-buffer|pbcopy'"
# To paste:
bind-key -n C-y run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/workspace/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/workspace/tmux/tmux-powerline/powerline.sh right)"

set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27] #[fg=colour255, bg=colour27] #I #W #[fg=colour27, bg=colour235]"

# bind C-[ run '~/path/to/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar.
# bind C-] run '~/path/to/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar.
